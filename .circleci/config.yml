version: 2.1

orbs:
  python: circleci/python@1.2
  node: circleci/node@4.7.0

workflows:
  build:
    jobs:
      - build-38
      - build-36
      - build-27

jobs:
  build-38:
    docker:
      - image: cimg/python:3.8
      - image: cimg/postgres:12.18-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Build and validate
          command: |
            python -m venv --copies /home/circleci/venv
            . /home/circleci/venv/bin/activate
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project question_kit
            mkdir django
            cd django
            django-admin startproject django_site
            mv ../question_kit django_site
            cd django_site
            cp question_kit/circle_settings.py django_site/settings.py
            cp question_kit/circle_urls.py django_site/urls.py
            python manage.py migrate
            python manage.py test
            cp question_kit/.pylintrc .
            pylint question_kit
            bandit -r .
      - save_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "/home/circleci/django/django_site/question_kit/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build-36:
    docker:
      - image: cimg/python:3.6
      - image: cimg/postgres:12.18-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          key: venv-36-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Build and validate
          command: |
            python -m venv --copies /home/circleci/venv
            . /home/circleci/venv/bin/activate
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project question_kit
            mkdir django
            cd django
            django-admin startproject django_site
            mv ../question_kit django_site
            cd django_site
            cp question_kit/circle_settings.py django_site/settings.py
            cp question_kit/circle_urls.py django_site/urls.py
            python manage.py migrate
            python manage.py test
            cp question_kit/.pylintrc .
            pylint question_kit
            bandit -r .
      - save_cache:
          key: venv-36-{{ .Branch }}-{{ checksum "/home/circleci/django/django_site/question_kit/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build-27:
    docker:
      - image: cimg/python:2.7
      - image: cimg/postgres:9.6-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          key: venv-27-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Build and validate
          command: |
            virtualenv --copies /home/circleci/venv
            . /home/circleci/venv/bin/activate
            pip install -r requirements.txt --progress-bar off
            cd ..
            mv project question_kit
            mkdir django
            cd django
            django-admin.py startproject django_site
            mv ../question_kit django_site
            cd django_site
            cp question_kit/circle_settings.py django_site/settings.py
            cp question_kit/circle_urls.py django_site/urls.py
            python manage.py migrate
            python manage.py test
            cp question_kit/.pylintrc .
            pylint question_kit
            bandit -r .
      - save_cache:
          key: venv-27-{{ .Branch }}-{{ checksum "/home/circleci/django/django_site/question_kit/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app
